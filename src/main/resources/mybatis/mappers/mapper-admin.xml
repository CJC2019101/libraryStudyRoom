<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.cqucc.library.service.admin.dao.ICKAdminDAO">

    <resultMap id="BaseResultMap" type="cn.cqucc.library.model.admin.Admin">
        <id column="id" property="id"/>
        <id column="admin_name" property="name"/>
        <id column="account" property="account"/>
        <id column="password" property="password"/>
        <id column="is_valid" property="isValid"/>
        <id column="school_name" property="schoolName"/>
        <id column="school_code" property="schoolCode"/>
        <id column="school_location" property="schoolLocation"/>
        <id column="level" property="level"/>
        <id column="create_at" property="createAt"/>
        <id column="update_at" property="updateAt"/>
    </resultMap>

    <insert id="addAdmin" parameterType="cn.cqucc.library.model.admin.Admin">
        insert into admins(id, admin_name, account, password, is_valid, school_code,
         school_name, school_location, level, create_at)
         values (
            #{id}, #{name}, #{account}, #{password},
            #{isValid}, #{schoolCode}, #{schoolName},
            #{schoolLocation}, #{level}, #{createAt}
        )
    </insert>

    <insert id="addAdmins" parameterType="java.util.List">
        <foreach collection="list" index="0" item="admin" separator=";">
            insert into admins(id, admin_name, account, password, is_valid,
            create_at, school_name, school_code,
            school_location, level) values (
            #{admin.id}, #{admin.name}, #{admin.account}, #{admin.password},
            #{admin.isValid},#{admin.createAt}, #{admin.schoolName},
            #{admin.schoolCode}, #{admin.schoolLocation}, #{admin.level}
            )
        </foreach>
    </insert>

    <select id="isExist" resultType="java.lang.Integer">
        select count(*)
        from admins
        where admins.account = #{account} and admins.password = #{password} and is_valid = true
        <if test="level != 0">
            and admins.level = #{level}
        </if>
    </select>

    <select id="getAdminInfo" resultMap="BaseResultMap">
        select *
            from admins
            where admins.account = #{account}
    </select>

    <select id="findAllAdmins" resultMap="BaseResultMap">
        select *
            from admins
            where school_code = #{schoolCode} and level != 1
            order by admins.admin_name desc,admins.create_at desc
    </select>

    <update id="resetPassword" parameterType="cn.cqucc.library.model.student.req.CKLibraryUserReq">
        update admins
        <set>
            <if test="password!=null and password!=''">
                password = #{password},
            </if>
            <if test="name!=null and name != ''">
                admin_name = #{name},
            </if>
        </set>
        where account = #{account}
    </update>

    <update id="setAdminIsValid" parameterType="cn.cqucc.library.model.admin.Admin">
        update admins
        set update_at = #{updateAt}, is_valid = not is_valid
        <where>
            <if test="account != null and account != ''">
                account = #{account}
            </if>
            <if test="schoolCode != null and schoolCode != ''">
                and school_code = #{schoolCode}
            </if>
        </where>
    </update>

    <update id="updateAdmin">
        update admins set admin_name = #{adminName}
            where account = #{adminAccount}
    </update>
</mapper>